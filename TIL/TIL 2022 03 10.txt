고차함수

하나 이상의 함수를 매개변수로 취하거나 함수를 결과로 반환하는 함수
매개변수를 전달하는 함수는 콜백함수

대표 배열조작 메서드

고차함수 sort
임의 정렬 : Array.sort(callback function)
sort는 문제가있음 4랑 10이있으면 10의 앞에가 1이라 앞으로 배열되는문제
reverse도 똑같음. 대소문자 구분없이 정렬도 안됨.

ascending_order를 통해 역순은 descending_order

숫자를 계산할 때.
let ascending_order = function (x, y) {return x - y;};

글자를 대소구분안하고 싶을 때.
let ascending_order = function (x,y) {
  x = x.toUpperCase();
  y = y.toUpperCase();

  if (x > y) return 1;
  else if (y > x) return -1;
  else return 0;}
// 글자일 때는 둘이 비교해서 조건을 1이나 -1로 만들어서 둘이 자리바꾸는것. 

숫자 글자 둘다 같이 쓰고 싶을 때.
let ascending_order = function (x,y) {
  if (typeof x === "string") x = x.toUpperCase();
  if (typeof y === "string") y = y.toUpperCase();

  return x > y ? 1 : -1;};
// 만약 x가 글자면 대문자로 만들고 아니면 return으로 가서 x가 y보다 크면 1을줘서 자리바꾸고 아니면 -1줌 

함수를 통해 양수 음수반환을 통해 sort의 매개변수로 넣어준다는것이다.
console.log(num.sort())의 sort에 대보면 설명나와있는데, (a, b) => a-b
즉 둘의 뺄셈이 양수면 자리를 바꾸고 음수일때만 그대로 넣는다는 것이다.

반복 작업 : Array.forEach()
forEach 배열 요소 별 각각 함수에 실행
Array.forEach(function(item,index,array));
item : 배열 요소, index : 배열 위치, array : 배열

콜백함수 결과 배열 반환 : Array.map()
배열 요소 별 함수 호출 및 결과를 배열로 반환.

forEach는 그배열에 실행해서 배열을 수정할 수 있지만
map은 배열을 새로 만들어 반환시키는형태라 원상태 변형X

조건 만족하는 하나의 값 반환 : Array.find() : 뒤에 조건을 만족하는게 있더라도 앞에거 하나만 출력
조건 만족하는 값 배열로 반환 : Array.filter()
누적 결과 값 반환 : Array.reduce()
