html : HyperText Markup Language

www의 동작원리 > 하나의 웹페이지에서 다른 웹페이지로 이동

HyperText : 다른 웹페이지로 이동하기 위한 요소 or
                웹을 구성하는 요소


프로그래밍 언어 : 데이터로 무엇인가를 작성해라(작동)
vs
마크업 언어 : 자체로 어떤 방식으로 어떻게 표현할지를 기술(구성)

결론 : HTML이란 HyperText 라는 요소로 그 웹 자체를 어떻게 표현

HTML (웹 구조) : 문서의 요소들이 어디에 위치할것인지
CSS (웹 표현) : 각 요소들의 외형
JavaScript (웹 동작) : 각 요소들의 동작 사용자 반응에 따른 동작
(자바 기능이 너무좋고 많아서 이제 다된다? 위임 제어?)

html과 css분리가 좋은이유 : 웹과 앱을 쓸때 1가지 html로 사용

css만 2개만들면 됨.

반대로 html여러개로 css하나의 스타일 적용도 됨.

HTML (웹 구조) : 문서의 요소들이 어디에 위치할것인지
CSS (웹 표현) : 각 요소들의 외형
JavaScript (웹 동작) : 각 요소들의 동작 사용자 반응에 따른 동작
(자바 기능이 너무좋고 많아서 이제 다된다? 위임 제어?)

html과 css분리가 좋은이유 : 웹과 앱을 쓸때 1가지 html로 사용

css만 2개만들면 됨.

반대로 html여러개로 css하나의 스타일 적용도 됨.

웹 표준 & 웹 접근성 & 웹 호환성

웹 표준
html을 읽는 코드가 브라우저마다 다를 수 있기 때문에 법칙을 만들어서 동일하게 적용되도록함
HTML living standard 표준 html5라고 불리기도함
원래는 living standard는 5의 개선안

= 웹표준에 맞춰 작성하면 운영체제 브라우저마다 다 의도한대로 거의 다 보임

웹 접근성
일시적으로 키보드 마우스 혹은 신체적 제약 인터넷 환경 제약 등을 극복하고 도와줄 수 있게 하는것.
ex.) 음성검색, 키보드없을때 마우스로 키보드입력

웹 호환성 (Cross Browsing)
대부분의 브라우저가 웹표준 준수하기때문에 ㄱㅊ
웹표준을 준수하면 호환성문제 해결~

HTML 생김새

구성 요소 하나하나를 "태그" 라는 방식으로 표기
태그의 기준은 HTML5

ex.) <p>내용</p>
<p> : 오프닝 태그
</p> : 클로징 태그
내용 : 브라우저에 표시되는 내용 X
위 3개를 요소라고 함.

태그 HTML5 모두 소문자 작성 권장, 줄 바꿈해도 읽는데 지장 X 오프닝 클로징태그 전까지 계속 읽음

빈 요소

내용이 없다면

이미지 : 오프닝 태그 (그림) 클로징 태그
수평선 : -----------------
줄 바꿈 : 엔터

빈 요소는 닫는 태그를 추가하지 않아도 된다.

<br>, <hr>, <img, <meat. <input

웹 표준에 빈 요소들이 이미 지정되어있음.

내가 내용을 안 쓴다고 해서 빈 요소는 아님.

빈 요소를 클로징 태그로 써도 무관

ex.) <br> = <br/>

빈 요소는 뒤에 명시적으로 /를 뒤에 써주기도 함

요소의 중첩

tag안에 tag가 들어갈 수 있음

ex.) <html> <ul> </ul> </html>
ui 는 html 의 내용

포함 관계를 구분하기 위해 들여쓰기를 사용해 작성
<html>
<ul>
</ul>
</html>

문법적으로 틀리진 않지만 가독성을 위해.

주석

<> : 사용자에게 보이지 않지만 브라우저에게 명령하기 위해

주석은 브라우저조차 안의 내용을 해석하지 않는다.

코드에 메모를 추가하거나 사용하지 않는 코드 임시 처리 > 그냥 코드 메모하기 위해.

html : 주석 문법 <!-- a~z -->

HTML 문서 구조

doctype :문서 타입

doctype html 버전 명시하는것임.

html : 무조건 하나의 문서에 1개만. 모든 요소들이 이 html 태그 요소 안에 들어야 됨

html 자식 태그 : head, body

head 태그 : 화면에 안 보이는 웹페이지 정보
ex.) 구글 맨 위에 페이지 제목 naver, youtube
body 태그 : 화면의 내용에 보이는 정보

head 태그

구글 검색 : head mdn

head 태그는 <title> 정확히 한 개의 요소 있어야 됨.

body 태그

구글 검색 : body mdn

즐겨 찾기 밑의 내용 모두

한 문서에 body 1개

특성 attribute (바디 태그에 사용될 수 있음)

빨강 휴지통에 있는 특성들은 사용 안 해야 됨.

함수들은 자바 스크립트로 하기 때문에 그냥 사용X

태그를 구분 짓는 특성

body 태그 안에 들어감
1. 구획을 나누는 태그 (컨테이너 역할)
단독 사용 눈에 보이지 않음 layout

2. 그 자체로 요소인 태그
구획이 아닌 나머지
ex.) 버튼, 텍스트 입력 창, 글자

블록과 인 라인 (구획을 나누는 요소)

Block 요소
언제나 새로운 줄에서 시작, 좌우 양쪽 최대한 늘이기
블록 요소를 쓰면 옆에 아무도 못 옴
이 안에 자식 요소를 넣으면 부모 요소 크기 만큼 사용

Inline 요소
어디든 시작 가능, 이전 요소가 끝나는 지점 시작
요소의 내용 만큼만 시작

1번 태그 > 왼쪽 상단 (block이라 가정)
2번 태그 > 1번 태그 오른쪽 or 아래쪽 (inline 가정)
이러면 가정에 의해 아래쪽으로 가게 됨.

3번 태그 > (inlline 가정) 2번 요소 오른쪽에 가게 됨
4번 태그 > (block 가정) 새로운 행으로 가야 하기 때문에 2번 요소 밑으로 가게 됨.

* 인 라인 요소는 블록 요소 포함 X
> 인 라인이 가로로 끝까지 안되 있으면 블록을 넣을 수 없음

콘텐츠 카테고리

HTML5 비슷한 특징 가진 요소끼리 묶어서 7개로 나눔

Metadata Content : 문서 메타 데이터, 다른 문서 가르킴

Flow Content : 웹 페이지상 메타 데이터 이외
(바디에 들어가는 요소)
책을 읽듯이 흐름에 따라 배치되어 플로우라 함

Section Content : 웹 문서 구획

Heading Content : 섹션의 제목과 관련

Phrasing Content : 문단에서 텍스트 마크업

Embedded Content : 이미지나 비디오 마크업

Interactive Content : 사용자 상호작용
(버튼, 텍스트 검색 등)

https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#kinds-of-content